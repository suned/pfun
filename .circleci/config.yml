version: 2.1
commands:
  install_poetry:
    description: Install poetry
    steps:
      - run: pip install --user poetry==1.0.9 && poetry config virtualenvs.in-project true
  install_dependencies:
    description: Install dependencies
    steps:
      - run: poetry install -E http -E sql --no-root && poetry run task compile && poetry install
jobs:
  lint:
    working_directory: ~/pfun
    docker:
      - image: circleci/python:3.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - py38-v2-dependency-cache-{{ checksum "poetry.lock" }}
            - py38-v2-dependency-cache-
      - install_poetry
      - install_dependencies
      - run:
          name: Lint
          command: poetry run pre-commit run --all
  test_py37:
    working_directory: ~/pfun
    docker:
      - image: circleci/python:3.7.5
    steps:
      - checkout
      - restore_cache:
          keys:
            - py37-v2-dependency-cache-{{ checksum "poetry.lock" }}
            - py37-v2-dependency-cache-
      - install_poetry
      - install_dependencies
      - run:
          name: Test
          command: poetry run tox -e py37
      - save_cache:
          key: py37-v2-dependency-cache-{{ checksum "poetry.lock" }}
          paths:
            - ".venv"
            - ".tox"
  test_py38:
    working_directory: ~/pfun
    docker:
      - image: circleci/python:3.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - py38-v2-dependency-cache-{{ checksum "poetry.lock" }}
            - py38-v2-dependency-cache-
      - install_poetry
      - install_dependencies
      - run:
          name: Test
          command: poetry run tox -e py38
      - save_cache:
          key: py38-v2-dependency-cache-{{ checksum "poetry.lock" }}
          paths:
            - ".venv"
            - ".tox"
  release:
    working_directory: ~/pfun
    docker:
      - image: circleci/python:3.8.0
    steps:
      - checkout
      - install_poetry
      - install_dependencies
      - run:
          name: Check version
          command: poetry run python scripts/check_version.py pyproject.toml $CIRCLE_TAG
      - run:
          name: Build
          command: poetry build
      - run:
          name: Release
          command: poetry publish --username $PYPI_USERNAME --password $PYPI_PASSWORD

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - lint
      - test_py37:
          filters:
            tags:
              only: /.*/
      - test_py38:
          filters:
            tags:
              only: /.*/
      - release:
          requires:
            - lint
            - test_py37
            - test_py38
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
