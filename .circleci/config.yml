defaults: &defaults
  working_directory: ~/pfun
  docker:
    - image: demosdemon/pyenv

version: 2
jobs:
  test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: python-cache
      - restore_cache:
          key: poetry-cache
      - restore_cache:
          keys:
            - dependency-cache-{{ checksum "poetry.lock" }}
            - dependency-cache-
      - run:
          name: Install python
          command: |
            pyenv install --skip-existing 3.7.5 && \
            pyenv install --skip-existing 3.8.0 && \
            pyenv local 3.7.5 3.8.0
      - run:
          name: Install poetry
          command: |
            POETRY_VERSION=1.0.9 curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python && \
            cat $HOME/.poetry/env >> $BASH_ENV
      - run:
          name: Configure poetry
          command: poetry config virtualenvs.in-project true
      - run:
          name: Install dependencies
          command: poetry install
      - save_cache:
          key: dependency-cache-{{ checksum "poetry.lock" }}
          paths:
            - .venv
            - .tox
      - save_cache:
          key: python-cache
          paths:
            - /.pyenv
      - save_cache:
          key: poetry-cache
          paths:
            - $HOME/.poetry
      - run:
          name: Lint
          command: poetry run pre-commit run --all
      - run:
          name: Test
          command: poetry run tox
  release:
    <<: *defaults
    steps:
      - checkout
      - run:
            name: Install depenencies
            command: poetry install
      - run:
            name: Check version
            command: poetry run python scripts/check_version.py pyproject.toml $CIRCLE_TAG
      - run:
            name: Build
            command: poetry build
      - run:
            name: Release
            command: poetry publish --username $PYPI_USERNAME --password $PYPI_PASSWORD

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - release:
          requires:
            - test
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)*/
            branches:
              ignore: /.*/
